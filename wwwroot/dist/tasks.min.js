const tasksBtns=document.getElementsByClassName("js-tasks-take"),tasks=document.getElementsByClassName("js-tasks-task"),currentWrapper=document.getElementById("js-tasks-current"),currentTitle=document.getElementById("js-tasks-current-title"),currentHours=document.getElementById("js-tasks-current-hours"),currentCreator=document.getElementById("js-tasks-current-creator"),currentDescription=document.getElementById("js-tasks-current-description"),id=Store.getItem("user").id;for(const a of tasksBtns){const b=a.getAttribute("data-executor");a.addEventListener("click",()=>{takeTask(a.getAttribute("data-id"),b)}),b==id?(a.classList.add("bg-c-red","hover:bg-c-red-light"),a.innerHTML="Остановить задачу"):(a.classList.add("bg-c-green","hover:bg-c-green-light"),a.innerHTML="Взять задачу")}for(const d of tasks){const e=d.getAttribute("data-executor");d.addEventListener("click",t=>{t.target.classList.contains("js-tasks-take")&&e==id||fillCurrentTask(d)}),id==e&&fillCurrentTask(d)}function fillCurrentTask(t){var e=t.getAttribute("data-wasted"),r=t.getAttribute("data-hours"),s=t.getAttribute("data-description"),a=t.getAttribute("data-creator"),t=t.getAttribute("data-title");currentWrapper.classList.remove("hidden"),currentTitle.innerHTML=t,currentCreator.innerHTML=a,currentDescription.innerHTML=s,currentHours.innerHTML=e+` часов из ${r} часов`}async function takeTask(t,e){try{var r=window.location.origin,s=e==id?"stopTask":"takeTask";await(await fetch(r+`/api/tasks/${s}?userId=${id}&taskId=`+t)).json()&&window.location.reload()}catch(t){console.error(t)}}